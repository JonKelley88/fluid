{"id":"node_modules/baobab-react/dist-modules/utils/prop-types.js","dependencies":[{"name":"/Users/clay/_dev/fluid/package.json","includedInParent":true,"mtime":1541189892414},{"name":"/Users/clay/_dev/fluid/.babelrc","includedInParent":true,"mtime":1539269257281},{"name":"/Users/clay/_dev/fluid/node_modules/baobab-react/package.json","includedInParent":true,"mtime":1541189909919},{"name":"./helpers","loc":{"line":7,"column":23},"parent":"/Users/clay/_dev/fluid/node_modules/baobab-react/dist-modules/utils/prop-types.js","resolved":"/Users/clay/_dev/fluid/node_modules/baobab-react/dist-modules/utils/helpers.js"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _helpers = require('./helpers');\n\nfunction errorMessage(propName, what) {\n  return 'prop type `' + propName + '` is invalid; it must be ' + what + '.';\n} /**\n   * Baobab-React Custom Prop Types\n   * ===============================\n   *\n   * PropTypes used to propagate context safely.\n   */\nexports.default = {\n  baobab: function baobab(props, propName) {\n    if (!(propName in props)) return;\n\n    if (!(0, _helpers.isBaobabTree)(props[propName])) return new Error(errorMessage(propName, 'a Baobab tree'));\n  }\n};","map":{"mappings":[{"source":"node_modules/baobab-react/dist-modules/utils/prop-types.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/baobab-react/dist-modules/utils/prop-types.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/baobab-react/dist-modules/utils/prop-types.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/baobab-react/dist-modules/utils/prop-types.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/baobab-react/dist-modules/utils/prop-types.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/baobab-react/dist-modules/utils/prop-types.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/baobab-react/dist-modules/utils/prop-types.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/baobab-react/dist-modules/utils/prop-types.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/baobab-react/dist-modules/utils/prop-types.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/baobab-react/dist-modules/utils/prop-types.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/baobab-react/dist-modules/utils/prop-types.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/baobab-react/dist-modules/utils/prop-types.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/baobab-react/dist-modules/utils/prop-types.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/baobab-react/dist-modules/utils/prop-types.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/baobab-react/dist-modules/utils/prop-types.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/baobab-react/dist-modules/utils/prop-types.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/baobab-react/dist-modules/utils/prop-types.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/baobab-react/dist-modules/utils/prop-types.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/baobab-react/dist-modules/utils/prop-types.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/baobab-react/dist-modules/utils/prop-types.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/baobab-react/dist-modules/utils/prop-types.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/baobab-react/dist-modules/utils/prop-types.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/baobab-react/dist-modules/utils/prop-types.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}}],"sources":{"node_modules/baobab-react/dist-modules/utils/prop-types.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _helpers = require('./helpers');\n\nfunction errorMessage(propName, what) {\n  return 'prop type `' + propName + '` is invalid; it must be ' + what + '.';\n} /**\n   * Baobab-React Custom Prop Types\n   * ===============================\n   *\n   * PropTypes used to propagate context safely.\n   */\nexports.default = {\n  baobab: function baobab(props, propName) {\n    if (!(propName in props)) return;\n\n    if (!(0, _helpers.isBaobabTree)(props[propName])) return new Error(errorMessage(propName, 'a Baobab tree'));\n  }\n};"},"lineCount":23}},"hash":"462981345e8e13a9cfef9c1c4af108a2","cacheData":{"env":{}}}